@Override
    public void start(Stage primaryStage) {

        Payment pay = new Payment();
        double price = pay.totalPayment(); // (double ticketPrice, double fnbPrice, int ticketNumber, int
        // fnbNumber)

        QRCodeWriter qrCodeWriter = new QRCodeWriter();
        String myWeb = String.format("Transaction Successful! RM%.2f Has been deducted from your E-wallet", price);
        int width = 300;
        int height = 300;
        String fileType = "png";

        BufferedImage bufferedImage = null;
        try {
            BitMatrix byteMatrix = qrCodeWriter.encode(myWeb, BarcodeFormat.QR_CODE, width, height);
            bufferedImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
            bufferedImage.createGraphics();

            Graphics2D graphics = (Graphics2D) bufferedImage.getGraphics();
            graphics.setColor(Color.WHITE);
            graphics.fillRect(0, 0, width, height);
            graphics.setColor(Color.BLACK);

            for (int i = 0; i < height; i++) {
                for (int j = 0; j < width; j++) {
                    if (byteMatrix.get(i, j)) {
                        graphics.fillRect(i, j, 1, 1);
                    }
                }
            }

            System.out.println("Success...");

        } catch (WriterException ex) {
            Logger.getLogger(JavaFX_QRCodeWriter.class.getName()).log(Level.SEVERE, null, ex);
        }

        ImageView qrView = new ImageView();
        qrView.setImage(SwingFXUtils.toFXImage(bufferedImage, null));

        StackPane root = new StackPane();
        root.getChildren().add(qrView);

        Scene scene = new Scene(root, 350, 350);

        primaryStage.setTitle("E-Wallet Payment");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }











     b.setDisable(true);

        Timer tr = new Timer();
        // schedule the repeating timer

        TimerTask tt = new TimerTask() {
            private static Integer count = 0;

            @Override
            public void run() {
                count++;
                if (count >= 30) {

                    sec.setText(count.toString() + " seconds");
                    b.setDisable(false);

                    tr.cancel();
                    tr.purge();

                    return;
                }
            }
        };

        tr.scheduleAtFixedRate(tt, 0, 1000);